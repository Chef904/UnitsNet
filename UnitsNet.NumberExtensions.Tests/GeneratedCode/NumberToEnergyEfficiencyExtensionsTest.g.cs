//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToEnergyEfficiency;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToEnergyEfficiencyExtensionsTests
    {
        [Fact]
        public void NumberToFemtowattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromFemtowattHoursPerKilometer(2), 2.FemtowattHoursPerKilometer());

        [Fact]
        public void NumberToFemtowattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromFemtowattHoursPerMeter(2), 2.FemtowattHoursPerMeter());

        [Fact]
        public void NumberToGigawattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromGigawattHoursPerKilometer(2), 2.GigawattHoursPerKilometer());

        [Fact]
        public void NumberToGigawattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromGigawattHoursPerMeter(2), 2.GigawattHoursPerMeter());

        [Fact]
        public void NumberToKilowattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromKilowattHoursPerKilometer(2), 2.KilowattHoursPerKilometer());

        [Fact]
        public void NumberToKilowattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromKilowattHoursPerMeter(2), 2.KilowattHoursPerMeter());

        [Fact]
        public void NumberToMegawattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromMegawattHoursPerKilometer(2), 2.MegawattHoursPerKilometer());

        [Fact]
        public void NumberToMegawattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromMegawattHoursPerMeter(2), 2.MegawattHoursPerMeter());

        [Fact]
        public void NumberToMicrowattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromMicrowattHoursPerKilometer(2), 2.MicrowattHoursPerKilometer());

        [Fact]
        public void NumberToMicrowattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromMicrowattHoursPerMeter(2), 2.MicrowattHoursPerMeter());

        [Fact]
        public void NumberToMilliwattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromMilliwattHoursPerKilometer(2), 2.MilliwattHoursPerKilometer());

        [Fact]
        public void NumberToMilliwattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromMilliwattHoursPerMeter(2), 2.MilliwattHoursPerMeter());

        [Fact]
        public void NumberToNanowattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromNanowattHoursPerKilometer(2), 2.NanowattHoursPerKilometer());

        [Fact]
        public void NumberToNanowattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromNanowattHoursPerMeter(2), 2.NanowattHoursPerMeter());

        [Fact]
        public void NumberToPicowattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromPicowattHoursPerKilometer(2), 2.PicowattHoursPerKilometer());

        [Fact]
        public void NumberToPicowattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromPicowattHoursPerMeter(2), 2.PicowattHoursPerMeter());

        [Fact]
        public void NumberToWattHoursPerKilometerTest() =>
            Assert.Equal(EnergyEfficiency.FromWattHoursPerKilometer(2), 2.WattHoursPerKilometer());

        [Fact]
        public void NumberToWattHoursPerMeterTest() =>
            Assert.Equal(EnergyEfficiency.FromWattHoursPerMeter(2), 2.WattHoursPerMeter());

    }
}
